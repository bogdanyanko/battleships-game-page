{"ast":null,"code":"import _toConsumableArray from\"/home/bohdan/Desktop/work/GH/battleships-game/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/bohdan/Desktop/work/GH/battleships-game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useState,useEffect}from'react';import PlayerSquare from'./PlayerSquare';import{jsx as _jsx}from\"react/jsx-runtime\";var PlayerGrid=function PlayerGrid(_ref){var playerGameGrid=_ref.playerGameGrid,setPlayerGameGrid=_ref.setPlayerGameGrid,playerShipYard=_ref.playerShipYard,playerPlacedShipsNumber=_ref.playerPlacedShipsNumber,setPlayerPlacedShipsNumber=_ref.setPlayerPlacedShipsNumber,setWinnerInfo=_ref.setWinnerInfo;var _useState=useState('horizontal'),_useState2=_slicedToArray(_useState,2),shipDirection=_useState2[0],setShipDirection=_useState2[1];var shipDirectionHandler=function shipDirectionHandler(event){event.preventDefault();if(shipDirection==='horizontal'){setShipDirection('vertical');}else{setShipDirection('horizontal');}};var shipProjectionHandler=function shipProjectionHandler(rowIndex,columnIndex){console.log(rowIndex,columnIndex);};var shipPlacementHandler=function shipPlacementHandler(rowIndex,columnIndex){var shipLength=playerShipYard[playerPlacedShipsNumber].shipLength;var playerGameGridCopy=_toConsumableArray(playerGameGrid);if(isPlacementAllowed(rowIndex,columnIndex,shipLength)){setPlayerPlacedShipsNumber(function(prevState){return prevState+1;});if(shipDirection==='horizontal'){for(var i=0;i<shipLength;i++){playerGameGridCopy[rowIndex]=_toConsumableArray(playerGameGridCopy[rowIndex]);playerGameGridCopy[rowIndex][columnIndex+i]=playerShipYard[playerPlacedShipsNumber].shipNumber;}setPlayerGameGrid(_toConsumableArray(playerGameGridCopy));}else{for(var _i=0;_i<shipLength;_i++){playerGameGridCopy[rowIndex+_i]=_toConsumableArray(playerGameGridCopy[rowIndex+_i]);playerGameGridCopy[rowIndex+_i][columnIndex]=playerShipYard[playerPlacedShipsNumber].shipNumber;}setPlayerGameGrid(_toConsumableArray(playerGameGridCopy));}}else{console.log('You can not place your ship here');}};var isPlacementAllowed=function isPlacementAllowed(rowIndex,columnIndex,shipLength){var checkNumber=0;if(shipDirection==='horizontal'){if(columnIndex+shipLength>10){return false;}for(var i=0;i<shipLength;i++){if(isSquareFree(rowIndex,columnIndex+i)){checkNumber++;}}if(checkNumber===shipLength){return true;}else{return false;}}else{if(rowIndex+shipLength>10){return false;}for(var _i2=0;_i2<shipLength;_i2++){if(isSquareFree(rowIndex+_i2,columnIndex)){checkNumber++;}}if(checkNumber===shipLength){return true;}else{return false;}}};var isSquareFree=function isSquareFree(rowIndex,columnIndex){for(var i=-1;i<=1;i++){for(var j=-1;j<=1;j++){if(playerGameGrid[rowIndex+i]!==undefined&&playerGameGrid[rowIndex+i][columnIndex+j]!==undefined){if(playerGameGrid[rowIndex+i][columnIndex+j]>=0){return false;}}}}return true;};useEffect(function(){var availableShips=playerShipYard.filter(function(ship){return ship.sunkStatus===false;});if(availableShips.length===0){setWinnerInfo('You lost this oneðŸ˜¥ Better luck next time!');}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[playerShipYard]);return/*#__PURE__*/_jsx(\"div\",{className:\"playerGrid\",children:playerGameGrid===null||playerGameGrid===void 0?void 0:playerGameGrid.map(function(squaresArray,arrayNumber){return/*#__PURE__*/_jsx(React.Fragment,{children:squaresArray===null||squaresArray===void 0?void 0:squaresArray.map(function(square,squareNumber){return/*#__PURE__*/_jsx(PlayerSquare,{insideText:square,rowIndex:arrayNumber,columnIndex:squareNumber,playerGameGrid:playerGameGrid,shipPlacementHandler:shipPlacementHandler,playerPlacedShipsNumber:playerPlacedShipsNumber,shipDirectionHandler:shipDirectionHandler,shipProjectionHandler:shipProjectionHandler},\"\".concat(arrayNumber).concat(squareNumber));})},arrayNumber);})});};export default PlayerGrid;","map":{"version":3,"sources":["/home/bohdan/Desktop/work/GH/battleships-game/src/components/PlayerGrid.js"],"names":["React","useState","useEffect","PlayerSquare","PlayerGrid","playerGameGrid","setPlayerGameGrid","playerShipYard","playerPlacedShipsNumber","setPlayerPlacedShipsNumber","setWinnerInfo","shipDirection","setShipDirection","shipDirectionHandler","event","preventDefault","shipProjectionHandler","rowIndex","columnIndex","console","log","shipPlacementHandler","shipLength","playerGameGridCopy","isPlacementAllowed","prevState","i","shipNumber","checkNumber","isSquareFree","j","undefined","availableShips","filter","ship","sunkStatus","length","map","squaresArray","arrayNumber","square","squareNumber"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport PlayerSquare from './PlayerSquare';\r\n\r\nconst PlayerGrid = ({ playerGameGrid, setPlayerGameGrid, playerShipYard, playerPlacedShipsNumber, setPlayerPlacedShipsNumber, setWinnerInfo }) => {\r\n  const [shipDirection, setShipDirection] = useState('horizontal');\r\n\r\n  const shipDirectionHandler = (event) => {\r\n    event.preventDefault();\r\n    if (shipDirection === 'horizontal') {\r\n      setShipDirection('vertical');\r\n    } else {\r\n      setShipDirection('horizontal');\r\n    }\r\n  }\r\n\r\n  const shipProjectionHandler = (rowIndex, columnIndex) => {\r\n    console.log(rowIndex, columnIndex);\r\n  }\r\n\r\n  const shipPlacementHandler = (rowIndex, columnIndex) => {\r\n    const shipLength = playerShipYard[playerPlacedShipsNumber].shipLength;\r\n    const playerGameGridCopy = [...playerGameGrid];\r\n\r\n    if (isPlacementAllowed(rowIndex, columnIndex, shipLength)) {\r\n      setPlayerPlacedShipsNumber(prevState => prevState + 1);\r\n      if (shipDirection === 'horizontal') {\r\n        for (let i = 0; i < shipLength; i++) {\r\n          playerGameGridCopy[rowIndex] = [...playerGameGridCopy[rowIndex]];\r\n          playerGameGridCopy[rowIndex][columnIndex + i] = playerShipYard[playerPlacedShipsNumber].shipNumber;\r\n        }\r\n        setPlayerGameGrid([...playerGameGridCopy]);\r\n      } else {\r\n        for (let i = 0; i < shipLength; i++) {\r\n          playerGameGridCopy[rowIndex + i] = [...playerGameGridCopy[rowIndex + i]];\r\n          playerGameGridCopy[rowIndex + i][columnIndex] = playerShipYard[playerPlacedShipsNumber].shipNumber;\r\n        }\r\n        setPlayerGameGrid([...playerGameGridCopy]);\r\n      }\r\n    } else {\r\n      console.log('You can not place your ship here');\r\n    }\r\n  }\r\n\r\n  const isPlacementAllowed = (rowIndex, columnIndex, shipLength) => {\r\n    let checkNumber = 0;\r\n\r\n    if (shipDirection === 'horizontal') {\r\n      if ((columnIndex + shipLength) > 10) {\r\n        return false;\r\n      }\r\n\r\n      for (let i = 0; i < shipLength; i++) {\r\n        if (isSquareFree(rowIndex, columnIndex + i)) {\r\n          checkNumber++;\r\n        }\r\n      }\r\n      if (checkNumber === shipLength) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n\r\n    } else {\r\n      if ((rowIndex + shipLength) > 10) {\r\n        return false;\r\n      }\r\n\r\n      for (let i = 0; i < shipLength; i++) {\r\n        if (isSquareFree(rowIndex + i, columnIndex)) {\r\n          checkNumber++;\r\n        }\r\n      }\r\n      if (checkNumber === shipLength) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  const isSquareFree = (rowIndex, columnIndex) => {\r\n    for (let i = -1; i <= 1; i++) {\r\n      for (let j = -1; j <= 1; j++) {\r\n        if (playerGameGrid[rowIndex + i] !== undefined && playerGameGrid[rowIndex + i][columnIndex + j] !== undefined) {\r\n          if (playerGameGrid[rowIndex + i][columnIndex + j] >= 0) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  \r\n  useEffect(() => {\r\n    let availableShips = playerShipYard.filter(ship => ship.sunkStatus === false);\r\n    if (availableShips.length === 0) {\r\n      setWinnerInfo('You lost this oneðŸ˜¥ Better luck next time!');\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [playerShipYard]);\r\n\r\n  return (\r\n    <div className='playerGrid'>\r\n      {playerGameGrid?.map((squaresArray, arrayNumber) => {\r\n        return (\r\n          <React.Fragment key={arrayNumber}>\r\n            {squaresArray?.map((square, squareNumber) => {\r\n              return (\r\n                <PlayerSquare \r\n                  key={`${arrayNumber}${squareNumber}`}\r\n                  insideText={square}\r\n                  rowIndex={arrayNumber}\r\n                  columnIndex={squareNumber}\r\n                  playerGameGrid={playerGameGrid}\r\n                  shipPlacementHandler={shipPlacementHandler}\r\n                  playerPlacedShipsNumber={playerPlacedShipsNumber}\r\n                  shipDirectionHandler={shipDirectionHandler}\r\n                  shipProjectionHandler={shipProjectionHandler}\r\n                >\r\n                </PlayerSquare>\r\n              )\r\n            })}\r\n          </React.Fragment>);\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerGrid;"]},"metadata":{},"sourceType":"module"}